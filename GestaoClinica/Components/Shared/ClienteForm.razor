@using GestaoClinica.ViewModel
@using Microsoft.AspNetCore.Components.Forms

<MudForm @ref="form" @onsubmit="HandleSubmit">
    <MudTabs Elevation="2" Rounded="true" @ref="tabs">
        <MudTabPanel Text="Dados Pessoais">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Cliente.Nome"
                                  Label="Nome *"
                                  Required="true"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Cliente.CPF"
                                  Label="CPF *"
                                  Required="true"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  @onblur="OnCpfBlur" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    @* Corrigido o binding do DatePicker *@
                    <MudDatePicker @bind-Value="Cliente.DataNascimento"
                                   Label="Data de Nascimento *"
                                   Required="true"
                                   Variant="Variant.Outlined"
                                   Margin="Margin.Dense"
                                   Format="dd/MM/yyyy" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Cliente.Telefone"
                                  Label="Telefone"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Cliente.Email"
                                  Label="Email"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  Type="InputType.Email" />
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        <MudTabPanel Text="Endereço">
            <MudGrid>
                <MudItem xs="12" sm="8">
                    <MudTextField @bind-Value="Cliente.Endereco.Logradouro"
                                  Label="Logradouro"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField @bind-Value="Cliente.Endereco.Numero"
                                  Label="Número"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Cliente.Endereco.Complemento"
                                  Label="Complemento"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Cliente.Endereco.Cidade"
                                  Label="Cidade"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="12" sm="3">
                    <MudTextField @bind-Value="Cliente.Endereco.Uf"
                                  Label="UF"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  MaxLength="2" />
                </MudItem>
                <MudItem xs="12" sm="3">
                    <MudTextField @bind-Value="Cliente.Endereco.Cep"
                                  Label="CEP"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" />
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        <MudTabPanel Text="Informações Adicionais">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Cliente.Observacoes"
                                  Label="Observações"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  Multiline="true"
                                  Rows="4" />
                </MudItem>
                <MudItem xs="12">
                    <MudSwitch @bind-Checked="Cliente.Ativo"
                               Label="Cliente Ativo"
                               Color="Color.Success"
                               T="bool" />
                </MudItem>
            </MudGrid>
        </MudTabPanel>
    </MudTabs>

    <MudDivider />
    <MudCardActions>
        <MudButton Type="submit" Color="Color.Primary" Variant="Variant.Filled">
            Salvar
        </MudButton>
        <MudButton @onclick="HandleCancel" Color="Color.Secondary" Variant="Variant.Outlined">
            Cancelar
        </MudButton>
    </MudCardActions>
</MudForm>

@code {
    [Parameter]
    public ClienteViewModel Cliente { get; set; } = new ClienteViewModel
    {
        Endereco = new EnderecoViewModel()
    };

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancelCallback { get; set; }

    [Parameter]
    public EventCallback<string> OnCpfCheck { get; set; }

    private MudForm form = null!;
    private MudTabs tabs = null!;

    protected override void OnInitialized()
    {
        // Garante que o endereço não seja nulo
        if (Cliente.Endereco == null)
        {
            Cliente.Endereco = new EnderecoViewModel();
        }
    }

    private async Task HandleSubmit()
    {
        if (form != null)
        {
            form.Validate();
            if (form.IsValid)
            {
                await OnSubmit.InvokeAsync();
            }
        }
    }

    private async Task OnCpfBlur(FocusEventArgs args)
    {
        if (!string.IsNullOrWhiteSpace(Cliente.CPF))
        {
            await OnCpfCheck.InvokeAsync(Cliente.CPF);
        }
    }

    private async Task HandleCancel()
    {
        await OnCancelCallback.InvokeAsync();
    }
}